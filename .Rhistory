recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2)
# geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "line", linewidth = 1)
#| label: fig-cmj3
#| fig-cap: Countermovement jump heights from the last five testing dates
#| fig-subcap:
#|  - "Vertical lines to join Mean and Max for each day"
#|  - "Trend line for the Mean daily jump height"
#| layout-ncol: 2
#| column: page
#| echo: true
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2)
# geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov), fun = "mean", geom = "line", linewidth = 1)
#| label: fig-cmj3
#| fig-cap: Countermovement jump heights from the last five testing dates
#| fig-subcap:
#|  - "Vertical lines to join Mean and Max for each day"
#|  - "Trend line for the Mean daily jump height"
#| layout-ncol: 2
#| column: page
#| echo: true
# recent_five %>%
#   ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
#   stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
#   stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
#   stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2)
#   # geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "line", linewidth = 1)
#| label: fig-cmj3
#| fig-cap: Countermovement jump heights from the last five testing dates
#| fig-subcap:
#|  - "Vertical lines to join Mean and Max for each day"
#|  - "Trend line for the Mean daily jump height"
#| layout-ncol: 2
#| column: page
#| echo: true
# recent_five %>%
#   ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
#   stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
#   stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
#   stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2)
#   # geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = 5), fun = "mean", geom = "line", linewidth = 1)
#| label: fig-cmj1
#| fig-cap: Countermovement jump heights from the last five testing dates
#| echo: true
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = 5), fun = "mean", geom = "line", linewidth = 1) +
geom_jitter(aes(y = flight_height_tov), shape = 1, size = 2, alpha = 0.3, width = 0.2)
#geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = 5), fun = "mean", geom = "line", linewidth = 1) +
geom_jitter(aes(y = flight_height_tov), shape = 1, size = 2, alpha = 0.3, width = 0.2) +
#geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
recent_five %>%
ggplot(aes(x = factor(date_ddmmyear, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = date_ddmmyear), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = 5), fun = "mean", geom = "line", linewidth = 1) +
geom_jitter(aes(y = flight_height_tov), shape = 1, size = 2, alpha = 0.5, width = 0.2) +
#geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
quarto add shafayetShafee/nameref
quarto list extensions
quarto_add_extension("quarto-ext/fontawesome")
library(quarto)
quarto_add_extension("quarto-ext/fontawesome")
quarto_add_extension("quarto-ext/fontawesome")
quarto_add_extension("quarto-ext/fontawesome")
quarto_add_extension("quarto-ext/fontawesome")
# Chunk 1
#| echo: true
#| output: false
library(tidyverse)
library(readxl)
library(janitor)
library(bslib)
library(ggthemes)
library(lubridate)
library(thematic)
library(plotly)
library(patchwork)
library(scales)
library(gt)
library(gtExtras)
library(withr)
library(ggpp)
library(ggimage)
library(googlesheets4)
source("~/Dropbox/Data Science/Website/plot_functions.R")
# Chunk 2: import-data
#| label: import-data
#| echo: false
#| output: false
jumps <- range_speedread("https://docs.google.com/spreadsheets/d/1OYu-AaAK8w36-_JcUsoSuX-BnRnyYozjmn8KQbz-axw/edit?gid=2135526598#gid=2135526598", sheet = "Database") %>%
clean_names() %>%
mutate(date_ddmmyear = as.Date(date_ddmmyear),
date_ddmmyear2 =  (format(date_ddmmyear, "%b %d, %Y"))) %>%
mutate_at(c(5:69), as.numeric)
#| label: tbl1
recent_five %>%
select(1:2,flight_height_tov) %>%
rename("Jump" = x1, "Date" = date_ddmmyear, "Jump Height (cm)" = flight_height_tov) %>%
relocate(Date)
#| label: import-data
#| echo: false
#| output: false
jumps <- range_speedread("https://docs.google.com/spreadsheets/d/1OYu-AaAK8w36-_JcUsoSuX-BnRnyYozjmn8KQbz-axw/edit?gid=2135526598#gid=2135526598", sheet = "Database") %>%
clean_names() %>%
mutate(date_ddmmyear = as.Date(date_ddmmyear),
date_ddmmyear2 =  (format(date_ddmmyear, "%b %d, %Y"))) %>%
mutate_at(c(5:69), as.numeric)
recent_five <- jumps %>%
filter(athlete == "Cassie Sharpe", activity == "CMJ") %>%
arrange(desc(date_ddmmyear)) %>%
filter(date_ddmmyear %in% unique(date_ddmmyear)[1:5])
#| label: tbl1
recent_five %>%
select(1:2,flight_height_tov) %>%
rename("Jump" = x1, "Date" = date_ddmmyear, "Jump Height (cm)" = flight_height_tov) %>%
relocate(Date)
recent_five %>%
write.csv()
?write_csv
write_csv(recent_five, "recent_five.csv")
View(recent_five)
getwd()
recent_five <- recent_five %>%
select(1:2,flight_height_tov) %>%
rename("Jump" = x1, "Date" = date_ddmmyear, "Jump Height (cm)" = flight_height_tov) %>%
relocate(Date)
View(recent_five)
write_csv(recent_five, "recent_five.csv")
Poo <- read_csv(recent_five.csv)
?read_csv
getwd()
Poo <- read_csv("recent_five.csv")
View(Poo)
recent_five <- jumps %>%
filter(athlete == "Cassie Sharpe", activity == "CMJ") %>%
arrange(desc(date_ddmmyear)) %>%
filter(date_ddmmyear %in% unique(date_ddmmyear)[1:5])
recent_five <- recent_five %>%
select(1:2,flight_height_tov) %>%
rename("Jump" = x1, "Date" = date_ddmmyear) %>%
relocate(Date)
View(recent_five)
recent_five <- read_csv("recent_five.csv")
View(recent_five)
recent_five <- jumps %>%
filter(athlete == "Cassie Sharpe", activity == "CMJ") %>%
arrange(desc(date_ddmmyear)) %>%
filter(date_ddmmyear %in% unique(date_ddmmyear)[1:5])
recent_five <- recent_five %>%
select(1:2,flight_height_tov) %>%
rename("Jump" = x1, "Date" = date_ddmmyear) %>%
relocate(Date)
write_csv(recent_five, "recent_five.csv")
recent_five <- read_csv("recent_five.csv")
View(recent_five)
#| label: fig-cmj1
#| fig-cap: Countermovement jump heights from the last five testing dates
#| echo: true
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point", size = 4)
View(recent_five)
?lightbox
??lightbox
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
{{<video https://www.youtube.com/embed/wo9vZccmqwc>}}
{{video https://www.youtube.com/embed/wo9vZccmqwc}}
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
{{ < video https://www.youtube.com/embed/wo9vZccmqwc > }}
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
{< video https://www.youtube.com/embed/wo9vZccmqwc >}
< video https://www.youtube.com/embed/wo9vZccmqwc >
~/Dropbox/Data Science/Website/Posts
recent_five <- read_csv("recent_five.csv")
library(tidyverse)
library(readxl)
recent_five <- read_csv("recent_five.csv")
View(recent_five)
View(recent_five)
#| label: tbl1
#| output: false
recent_five <- read_csv("recent_five.csv")
print(recent_five)
# Chunk 1
#| echo: true
#| output: false
library(tidyverse)
library(readxl)
library(janitor)
#library(bslib)
#library(ggthemes)
#library(lubridate)
#library(thematic)
#library(plotly)
#library(patchwork)
#library(scales)
#library(gt)
#library(gtExtras)
#library(withr)
#library(ggpp)
#library(ggimage)
library(googlesheets4)
source("~/Dropbox/Data Science/Website/plot_functions.R")
recent_five
# Chunk 1
#| echo: true
#| output: false
library(tidyverse)
library(readxl)
library(janitor)
#library(bslib)
#library(ggthemes)
#library(lubridate)
#library(thematic)
#library(plotly)
#library(patchwork)
#library(scales)
#library(gt)
#library(gtExtras)
#library(withr)
#library(ggpp)
#library(ggimage)
library(googlesheets4)
source("~/Dropbox/Data Science/Website/plot_functions.R")
# Chunk 2: import-data
#| label: import-data
#| echo: false
#| output: false
jumps <- range_speedread("https://docs.google.com/spreadsheets/d/1OYu-AaAK8w36-_JcUsoSuX-BnRnyYozjmn8KQbz-axw/edit?gid=2135526598#gid=2135526598", sheet = "Database") %>%
clean_names() %>%
mutate(date_ddmmyear = as.Date(date_ddmmyear),
date_ddmmyear2 =  (format(date_ddmmyear, "%b %d, %Y"))) %>%
mutate_at(c(5:69), as.numeric)
#| label: tbl1
#| echo: false
#| output: false
recent_five <- recent_five %>%
select(1:2,flight_height_tov) %>%
rename("Jump" = x1, "Date" = date_ddmmyear) %>%
relocate(Date)
#| label: import-data
#| echo: false
#| output: false
jumps <- range_speedread("https://docs.google.com/spreadsheets/d/1OYu-AaAK8w36-_JcUsoSuX-BnRnyYozjmn8KQbz-axw/edit?gid=2135526598#gid=2135526598", sheet = "Database") %>%
clean_names() %>%
mutate(date_ddmmyear = as.Date(date_ddmmyear),
date_ddmmyear2 =  (format(date_ddmmyear, "%b %d, %Y"))) %>%
mutate_at(c(5:69), as.numeric)
recent_five <- jumps %>%
filter(athlete == "Cassie Sharpe", activity == "CMJ") %>%
arrange(desc(date_ddmmyear)) %>%
filter(date_ddmmyear %in% unique(date_ddmmyear)[1:5])
#| label: tbl1
#| echo: false
#| output: false
recent_five <- recent_five %>%
select(1:2,flight_height_tov) %>%
rename("Jump" = x1, "Date" = date_ddmmyear) %>%
relocate(Date)
write_csv(recent_five, "recent_five.csv")
recent_five <- read_csv("recent_five.csv")
recent_five
#| label: fig-cmj1
#| fig-cap: Countermovement jump heights from the last five testing dates
#| echo: true
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point")
#| label: tbl1
#| echo: false
#| output: false
recent_five <- read_csv("recent_five.csv")
recent_five
recent_five
#| label: fig-cmj-themed
#| fig-cap: Countermovement jump heights from the last five testing dates
#| echo: true
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point", size = 6) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
#| label: fig-cmj2
#| fig-cap: Countermovement jump heights from the last five testing dates
#| echo: true
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point", size = 6) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "max", geom = "point", size = 4) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
#| label: fig-cmj3
#| fig-cap: Countermovement jump heights from the last five testing dates
#| fig-subcap:
#|  - "Vertical lines to join Mean and Max for each day"
#|  - "Trend line for the Mean daily jump height"
#| layout-ncol: 2
#| column: page
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = 5), fun = "mean", geom = "line", linewidth = 1) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
?leaflet
#| column: screen
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=123.1207, lat=49.2827, popup="Go Leafs Go")
?leaflet
#| column: screen
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=49.2827, lat=123.1207, popup="Go Leafs Go")
#| column: screen
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=123.1207, lat=49.2827, popup="Go Leafs Go")
?addMarkers
#| column: screen
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=123, lat=49, popup="Go Leafs Go")
#| column: screen
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=173, lat=49, popup="Go Leafs Go")
#| column: screen
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-123, lat=49, popup="Go Leafs Go")
#| column: screen
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-123.12, lat=49.28, popup="Go Leafs Go")
install.packages("beepr")
library(magick)
library(ggplot)
library(ggplot)
library(ggplot2)
library(ggplot2)
library(magick)
library(beepr)
raintemp %>%
na.omit() %>%
filter(beachbugs > 500) %>%
ggplot(aes(x = rain_mm, y = beachbugs, color = temp_airport)) +
geom_point() +
geom_smooth() +
theme_classic() +
scale_colour_distiller(name = "Temp (C)", palette = "RdYlBu") +
labs(title = "Mean enterococci bacteria levels at Eastern Suburbs \nbeaches as a function of rainfall and temperature",
subtitle = "only day > 500",
caption = "data from https://www.environment.nsw.gov.au/beachapp/report_enterococci.aspx",
x = "Rainfall (mm)",
y = "Mean enterococci levels")
recent_five <- read_csv("recent_five.csv")
library(tidyverse)
library(readxl)
library(magick)
library(beepr)
recent_five <- read_csv("recent_five.csv")
#
ggsave("beaches.png")
library(tidyverse)
library(readxl)
library(magick)
library(beepr)
source("~/Dropbox/Data Science/Website/plot_functions.R")
recent_five <- read_csv("recent_five.csv")
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = 5), fun = "mean", geom = "line", linewidth = 1) +
geom_jitter(aes(y = flight_height_tov), shape = 1, size = 2, alpha = 0.5, width = 0.2) +
#geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
#ggsave("beaches.png")
recent_five %>%
ggplot(aes(x = factor(Date, ordered = T))) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "mean", geom = "point", size = 4) +
stat_summary(aes(y = flight_height_tov, group = Date), fun = "max", geom = "point", size = 2) +
stat_summary(aes(y = flight_height_tov), fun.data=mean_peak, geom="pointrange", size = 2) +
stat_summary(aes(y = flight_height_tov, group = 5), fun = "mean", geom = "line", linewidth = 1) +
geom_jitter(aes(y = flight_height_tov), shape = 1, size = 2, alpha = 0.5, width = 0.2) +
#geom_hline(aes(yintercept = mean(as.numeric(flight_height_tov))), alpha = 0.3, linetype = 2, linewidth = 1.5) +
ak_plot_theme() +
labs(
x = NULL,
y = "Jump Height (cm)",
title = NULL)
ggsave("beaches.png")
knitr::include_graphics("beaches.png")
knitr::include_graphics("more-hops.gif")
knitr::include_graphics("~/Posts/2024-08-26-testing-quarto-functions/more-hops.gif")
knitr::include_graphics("/Posts/2024-08-26-testing-quarto-functions/more-hops.gif")
knitr::include_graphics("~/Dropbox/Data Science/Website/Posts/2024-08-26-testing-quarto-functions/more-hops.gif")
beachplot <- image_read("beaches.png")
wizgif <- image_read("more-hops.gif")
wizgif <- image_read("~/Dropbox/Data Science/Website/Posts/2024-08-26-testing-quarto-functions/more-hops.gif")
frames <- image_composite(beachplot, wizgif, offset = "+600+200")
animation <- image_animate(frames, fps = 10)
image_write(animation, "beachwiz.gif")
beep()
?image_composite
frames <- image_composite(beachplot, wizgif, offset = "+600+600")
animation <- image_animate(frames, fps = 10)
image_write(animation, "beachwiz.gif")
beep()
frames <- image_composite(beachplot, wizgif, offset = "+100+100")
animation <- image_animate(frames, fps = 10)
image_write(animation, "beachwiz.gif")
beep()
